#version 420 core

uniform sampler2D color;
uniform sampler2D pos;
uniform sampler2D norm;
uniform uint num_lights;
uniform mat4 moovmat;

uniform vec3 mmv;

out vec4 ocolor;

struct LightPoint
{
vec3 position;
vec3 color;
};

uniform LightPoint light[100];

uniform vec3 diffuse_albedo = vec3(0.5, 0.2, 0.7);
uniform vec3 specular_albedo = vec3(0.7);
uniform float specular_power = 128.0;



void main()
{
vec2 screenSize = vec2(1280,720);
vec4 wpos = texture2D(pos, gl_FragCoord.xy / screenSize);
vec4 n = texture2D(norm, gl_FragCoord.xy / screenSize);
vec4 col;
col = texture2D(color, gl_FragCoord.xy / screenSize);

vec3 L = wpos.xyz - light[0].position;
float dist = length(L);
L = normalize(L);
vec3 N = normalize(n.xyz);
vec3 R = reflect(-L, N);
float NdotR = max(0.0, dot(N, R));
float NdotL = max(0.0, dot(N, L));
float attenuation = 50.0 / (pow(dist, 2.0) + 1.0);
vec3 diffuse_color = light[0].color * col.rgb *
NdotL * attenuation;
vec3 specular_color = light[0].color *
pow(NdotR, specular_power)
* attenuation;

ocolor = vec4(diffuse_color + specular_color, 1.0);
}

